/*
Curso: Engenharia de Software - UniEVANGÉLICA
Disciplina: Sistemas Gerenciadores de Banco de Dados
Dev: Luiz Filipe Neuwirth
Data: 27/03/2023
*/

CREATE DATABASE NADESPENSA;

USE NADESPENSA;

--Criação de Tabelas
CREATE TABLE USUARIO (
ID_USUARIO INT PRIMARY KEY NOT NULL,
SENHA VARCHAR(20) UNIQUE NOT NULL,
NOME VARCHAR(70) NOT NULL
);

CREATE TABLE ALIMENTOS (
ID_PRODUTO INT PRIMARY KEY NOT NULL,
VALIDADE INT UNIQUE NOT NULL,
QUANTIDADE_PRODUTO INT NOT NULL
);

CREATE TABLE CONTA(
ID_CONTA INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
NOME VARCHAR(30) NOT NULL,
ID_USUARIO INT NOT NULL,
FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE NOTIFICACAO(
ID_PRODUTO INT PRIMARY KEY NOT NULL,
PRODUTO VARCHAR(70) NOT NULL,
VALIDADE INT UNIQUE NOT NULL,
ID_CONTA INT NOT NULL,
FOREIGN KEY(ID_CONTA) REFERENCES CONTA(ID_CONTA),
FOREIGN KEY(ID_PRODUTO) REFERENCES ALIMENTOS(ID_PRODUTO)
);

CREATE TABLE MERCADO_VIRTUAL(
PRODUTO VARCHAR(70) PRIMARY KEY NOT NULL,
VALIDADE INT UNIQUE NOT NULL,
ID_CONTA INT NOT NULL,
FOREIGN KEY(ID_CONTA) REFERENCES CONTA(ID_CONTA)
);

-- Inserir um novo registro na tabela USUARIO
INSERT INTO USUARIO (ID_USUARIO, SENHA, NOME)
VALUES (1, 'senha123', 'João da Silva');

-- Atualizar o nome do usuário com ID_USUARIO = 1
UPDATE USUARIO SET NOME = 'João Silva' WHERE ID_USUARIO = 1;

-- Excluir um registro da tabela USUARIO
DELETE FROM USUARIO WHERE ID_USUARIO = 1;

-- SELECT usando operadores de comparação
SELECT * FROM ALIMENTOS WHERE QUANTIDADE_PRODUTO > 10;
SELECT * FROM ALIMENTOS WHERE VALIDADE < '2023-04-01';

-- SELECT usando combinação de diferentes operadores lógicos
SELECT * FROM ALIMENTOS WHERE QUANTIDADE_PRODUTO > 10 AND VALIDADE < '2023-04-01';
SELECT * FROM ALIMENTOS WHERE QUANTIDADE_PRODUTO < 5 OR VALIDADE < '2023-04-01';
SELECT * FROM ALIMENTOS WHERE NOT QUANTIDADE_PRODUTO < 5;

-- SELECT usando operadores de intervalo
SELECT * FROM ALIMENTOS WHERE VALIDADE BETWEEN '2023-04-01' AND '2023-04-30';
SELECT * FROM ALIMENTOS WHERE QUANTIDADE_PRODUTO IN (5, 10, 15);
SELECT * FROM ALIMENTOS WHERE QUANTIDADE_PRODUTO NOT IN (5, 10, 15);

-- SELECT usando operadores de padrão
SELECT * FROM USUARIO WHERE NOME LIKE 'J%';
SELECT * FROM USUARIO WHERE NOME LIKE '%a%';

-- SELECT usando operações de conjuntos
SELECT * FROM ALIMENTOS WHERE ID_PRODUTO IN (SELECT ID_PRODUTO FROM CONTA);
SELECT * FROM ALIMENTOS WHERE ID_PRODUTO NOT IN (SELECT ID_PRODUTO FROM CONTA);

-- SELECT usando operadores de agregação
SELECT COUNT(*) FROM ALIMENTOS;
SELECT SUM(QUANTIDADE_PRODUTO) FROM ALIMENTOS;
SELECT AVG(QUANTIDADE_PRODUTO) FROM ALIMENTOS;
SELECT MAX(VALIDADE) FROM ALIMENTOS;

-- SELECT usando JOINs
SELECT * FROM CONTA JOIN ALIMENTOS ON CONTA.ID_PRODUTO = ALIMENTOS.ID_PRODUTO;
SELECT * FROM CONTA JOIN ALIMENTOS ON CONTA.ID_PRODUTO = ALIMENTOS.ID_PRODUTO WHERE CONTA.ID_USUARIO = 1;
SELECT * FROM CONTA LEFT JOIN NOTIFICACAO ON CONTA.ID_PRODUTO = NOTIFICACAO.ID_PRODUTO;
SELECT * FROM CONTA RIGHT JOIN MERCADO_VIRTUAL ON CONTA.ID_CONTA = MERCADO_VIRTUAL.ID_CONTA;